name: sharding-repl-cache

services:
  config_srv:
    image: dh-mirror.gitverse.ru/mongo:latest
    container_name: config_srv
    restart: always
    ports:
      - "27017:27017"
    networks:
      app-network:
        ipv4_address: 173.17.0.10
    volumes:
      - config-data:/data/db
    command:
      [
        "--configsvr",
        "--replSet",
        "config_server",
        "--bind_ip_all",
        "--port",
        "27017"
      ]
    healthcheck:
      test: [ "CMD", "mongo", "--eval", "db.adminCommand('ping')" ]
      interval: 5s
      start_period: 10s

  shard_1_1:
    image: dh-mirror.gitverse.ru/mongo:latest
    container_name: shard_1_1
    restart: always
    ports:
      - "27018:27018"
    networks:
      app-network:
        ipv4_address: 173.17.0.9
    volumes:
      - shard-1-1-data:/data/db
    command:
      [
        "--shardsvr",
        "--replSet",
        "shard_1_replicaset",
        "--bind_ip_all",
        "--port",
        "27018"
      ]
    healthcheck:
      test: [ "CMD", "mongo", "--eval", "db.adminCommand('ping')" ]
      interval: 5s
      start_period: 10s

  shard_1_2:
    image: dh-mirror.gitverse.ru/mongo:latest
    container_name: shard_1_2
    restart: always
    ports:
      - "27019:27019"
    networks:
      app-network:
        ipv4_address: 173.17.0.8
    volumes:
      - shard-1-2-data:/data/db
    command:
      [
        "--shardsvr",
        "--replSet",
        "shard_1_replicaset",
        "--bind_ip_all",
        "--port",
        "27019"
      ]
    healthcheck:
      test: [ "CMD", "mongo", "--eval", "db.adminCommand('ping')" ]
      interval: 5s
      start_period: 10s

  shard_1_3:
    image: dh-mirror.gitverse.ru/mongo:latest
    container_name: shard_1_3
    restart: always
    ports:
      - "27020:27020"
    networks:
      app-network:
        ipv4_address: 173.17.0.7
    volumes:
      - shard-1-3-data:/data/db
    command:
      [
        "--shardsvr",
        "--replSet",
        "shard_1_replicaset",
        "--bind_ip_all",
        "--port",
        "27020"
      ]
    healthcheck:
      test: [ "CMD", "mongo", "--eval", "db.adminCommand('ping')" ]
      interval: 5s
      start_period: 10s

  shard_2_1:
    image: dh-mirror.gitverse.ru/mongo:latest
    container_name: shard_2_1
    restart: always
    ports:
      - "27021:27021"
    networks:
      app-network:
        ipv4_address: 173.17.0.6
    volumes:
      - shard-2-1-data:/data/db
    command:
      [
        "--shardsvr",
        "--replSet",
        "shard_2_replicaset",
        "--bind_ip_all",
        "--port",
        "27021"
      ]
    healthcheck:
      test: [ "CMD", "mongo", "--eval", "db.adminCommand('ping')" ]
      interval: 5s
      start_period: 10s

  shard_2_2:
    image: dh-mirror.gitverse.ru/mongo:latest
    container_name: shard_2_2
    restart: always
    ports:
      - "27022:27022"
    networks:
      app-network:
        ipv4_address: 173.17.0.5
    volumes:
      - shard-2-2-data:/data/db
    command:
      [
        "--shardsvr",
        "--replSet",
        "shard_2_replicaset",
        "--bind_ip_all",
        "--port",
        "27022"
      ]
    healthcheck:
      test: [ "CMD", "mongo", "--eval", "db.adminCommand('ping')" ]
      interval: 5s
      start_period: 10s

  shard_2_3:
    image: dh-mirror.gitverse.ru/mongo:latest
    container_name: shard_2_3
    restart: always
    ports:
      - "27023:27023"
    networks:
      app-network:
        ipv4_address: 173.17.0.4
    volumes:
      - shard-2-3-data:/data/db
    command:
      [
        "--shardsvr",
        "--replSet",
        "shard_2_replicaset",
        "--bind_ip_all",
        "--port",
        "27023"
      ]
    healthcheck:
      test: [ "CMD", "mongo", "--eval", "db.adminCommand('ping')" ]
      interval: 5s
      start_period: 10s

  mongos_router:
    image: dh-mirror.gitverse.ru/mongo:latest
    container_name: mongos_router
    restart: always
    ports:
      - "27024:27024"
    networks:
      app-network:
        ipv4_address: 173.17.0.3
    command:
      [
        "mongos",
        "--configdb",
        "config_server/config_srv:27017",
        "--bind_ip_all",
        "--port",
        "27024"
      ]
    healthcheck:
      test: [ "CMD", "mongo", "--eval", "db.adminCommand('ping')" ]
      interval: 5s
      start_period: 10s

  pymongo_api:
    container_name: pymongo_api
    build:
      context: api_app
      dockerfile: Dockerfile
    image: kazhem/pymongo_api:1.0.0
    depends_on:
      - mongos_router
    ports:
      - 8080:8080
    networks:
      app-network:
        ipv4_address: 173.17.0.2
    environment:
      MONGODB_URL: "mongodb://mongos_router:27024"
      MONGODB_DATABASE_NAME: "somedb"
      REDIS_URL: "redis://redis:6379"

  redis:
    image: "redis:latest"
    container_name: redis
    ports:
      - "6379"
    volumes:
      - redis-data:/data
    networks:
      app-network:
        ipv4_address: 173.17.0.11

networks:
  app-network:
    driver: bridge
    ipam:
      driver: default
      config:
        - subnet: 173.17.0.0/16

volumes:
  config-data:
  shard-1-1-data:
  shard-1-2-data:
  shard-1-3-data:
  shard-2-1-data:
  shard-2-2-data:
  shard-2-3-data:
  redis-data:
  pymongo-api: